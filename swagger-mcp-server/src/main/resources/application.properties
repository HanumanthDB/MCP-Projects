mcp.sse.endpoint=/sse
spring.main.web-application-type=reactive

# Example usage:
# auth.header.name=Authorization
# auth.header.prefix=Bearer
# auth.token.value=<your-token-here>
#
# When you implement authenticated external calls, read these via @Value or @ConfigurationProperties in your code.

server.port=8081
debug=true
# URL to the Swagger/OpenAPI (v2/v3) definition to auto-expose as MCP tools.
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Test 
# # Change this to your desired swagger endpoint.
# swagger.api.url=https://petstore.swagger.io/v2/swagger.json
# api.base.url=https://petstore.swagger.io/v2

#openapi 3.1.0 
swagger.api.url=https://raw.githubusercontent.com/readmeio/oas-examples/main/3.1/json/petstore.json
api.base.url=https://petstore.swagger.io/v2

# # Example custom headers for all RestTemplate calls:
# swagger.rest.headers.X-Api-Key=my-secret-key
# swagger.rest.headers.Client-ID=client-xyz

# Change this to your desired swagger endpoint.
# swagger.api.url=http://ofss-mum-2757.snbomprshared1.gbucdsint02bom.oraclevcn.com:3101/estservice/v3/api-docs
# api.base.url=http://ofss-mum-2757.snbomprshared1.gbucdsint02bom.oraclevcn.com:3101/estservice

spring.ai.mcp.server.name=swagger-mcp-server
spring.ai.mcp.server.version=1.0.0
spring.ai.mcp.server.type=ASYNC
spring.ai.mcp.server.instructions=A generic Model Context Protocol (MCP) server built with Spring Boot that dynamically converts any Swagger/OpenAPI (v2 or v3, JSON or YAML) API into MCP-exposed tools. Every discovered API endpoint is exposed as a tool, enabling secure and unified access via the MCP interface, compatible with Cline and similar clients.
spring.ai.mcp.server.capabilities.tool=true
spring.ai.mcp.server.capabilities.resource=true
# spring.ai.mcp.server.capabilities.prompt=true
# spring.ai.mcp.server.capabilities.completion=true
